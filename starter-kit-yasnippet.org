#+TITLE: Starter Kit Yasnippet
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Yasnippet
[[http://code.google.com/p/yasnippet/][yasnippet]] is yet another snippet expansion system for Emacs.  It is
inspired by TextMate's templating syntax.
- watch the [[http://www.youtube.com/watch?v=vOj7btx3ATg][video on YouTube]]
- see the [[http://yasnippet.googlecode.com/svn/trunk/doc/index.html][intro and tutorial]]

** Put yasnippet directories on the load path
   :PROPERTIES:
   :CUSTOM_ID: snippet-paths
   :END:
#+begin_src emacs-lisp
;  (add-to-list 'load-path
;               (expand-file-name  "yasnippet"
;                                  (expand-file-name "src"
;                                                    starter-kit-dir)))
#+end_src

** Load Yasnippet
   :PROPERTIES:
   :CUSTOM_ID: load
   :END:
#+begin_src emacs-lisp
            (use-package yasnippet
              :ensure t
              :init
              (progn
                (add-hook 'after-save-hook 
                          (lambda ()
                            (when (eql major-mode 'snippet-mode)
                              (yas-reload-all))))
                (setq yas-snippet-dirs (list (expand-file-name "snippets" starter-kit-dir)))
                (setq yas-prompt-functions '(yas/ido-prompt))
                (yas-global-mode 1)
                )
              :mode
              ("\\.yasnippet" . snippet-mode)
              :config
              (define-key yas-minor-mode-map (kbd "<tab>") nil)
              (define-key yas-minor-mode-map (kbd "TAB") nil)
              (define-key yas-minor-mode-map (kbd "<C-tab>")
                '(lambda ()
                   (interactive)
                   (indent-for-tab-command)
                   (yas-expand)))

              (define-key yas-keymap [(tab)]       nil)
              (define-key yas-keymap (kbd "TAB")   nil)
              (define-key yas-keymap [(shift tab)] nil)
              (define-key yas-keymap [backtab]     nil)
              (define-key yas-keymap (kbd "<C-tab>") 'yas-next-field-or-maybe-expand)
              (define-key yas-keymap (kbd "<C-M-tab>") 'yas-prev-field)
  )
#+end_src

** Configure Yasnippets for Org Mode
   :PROPERTIES:
   :CUSTOM_ID: org-mode
   :tangle:   no
   :END:

The latest version of yasnippets doesn't play well with Org-mode, the
following function allows these two to play nicely together.
#+begin_src emacs-lisp
  (defun yas/org-very-safe-expand ()
    (let ((yas/fallback-behavior 'return-nil)) (yas/expand)))

  (defun yas/org-setup ()
    ;; yasnippet (using the new org-cycle hooks)
    (make-variable-buffer-local 'yas/trigger-key)
    (setq yas/trigger-key [tab])
    (add-to-list 'org-tab-first-hook 'yas/org-very-safe-expand)
    (define-key yas/keymap [tab] 'yas/next-field))

  ;; See https://github.com/eschulte/emacs24-starter-kit/issues/80.
  (setq org-src-tab-acts-natively nil)

  (add-hook 'org-mode-hook #'yas/org-setup)
#+end_src

** Add custom yasnippet methods

#+BEGIN_SRC emacs-lisp
  (defun yas-delete (regexp)
    (goto-char yas-snippet-beg)
    (while (re-search-forward regexp yas-snippet-end t)
      (replace-match "")))

  (defun yas-delete-space ()
    (goto-char yas-snippet-beg)
    (delete-backward-char 1)
    (goto-char (- yas-snippet-end 1)))

(defun yas-capitalize-first-char (&optional string)
  "Capitalize only the first character of the input STRING."
  (when (and string (> (length string) 0))
    (let ((first-char (substring string nil 1))
          (rest-str   (substring string 1)))
      (concat (capitalize first-char) rest-str))))
#+END_SRC
